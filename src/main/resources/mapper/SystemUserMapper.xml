<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="github.serliunx.varytalk.project.system.mapper.SystemUserMapper">
    <resultMap id="userResult" type="github.serliunx.varytalk.project.system.entity.SystemUser">
        <result property="id" column="id"/>
        <result property="username" column="username"/>
        <result property="password" column="password"/>
        <result property="phoneNumber" column="phone_number"/>
        <result property="email" column="email"/>
        <result property="nickName" column="nick_name"/>
        <result property="createBy" column="create_by"/>
        <result property="createTime" column="create_time"/>
        <result property="updateBy" column="update_by"/>
        <result property="updateTime" column="update_time"/>
        <result property="remark" column="remark"/>
    </resultMap>

    <sql id="user">
        select s.id, s.username, s.password, s.phone_number, s.email, s.nick_name, sds.sex_tag as sex, s.create_by,
               s.create_time, s.update_by, s.update_time, s.remark from sys_user s left join sys_dict_sex sds on s.sex_id = sds.id
        where s.id > 0
    </sql>

    <select id="selectList" parameterType="SystemUser" resultMap="userResult">
        <include refid="user"/>
        <if test="username != null and username != ''">
            and s.username like concat('%', #{username}, '%')
        </if>
        <if test="nickName != null and nickName != ''">
            and s.nick_name like concat('%', #{nickName}, '%')
        </if>
        <if test="phoneNumber != null and phoneNumber != ''">
            and s.phone_number like concat('%', #{phoneNumber}, '%')
        </if>
        <if test="email != null and email != ''">
            and s.email like concat('%', #{email}, '%')
        </if>
        <if test="sex != null and sex != ''">
            and sds.sex_tag like concat('%', #{sex}, '%')
        </if>
    </select>

    <select id="checkUserByUsername" resultMap="userResult" parameterType="string">
        <include refid="user"/>
        and s.username = #{username} limit 1
    </select>

    <select id="checkUserByPhoneNumber" resultMap="userResult" parameterType="string">
        <include refid="user"/>
        and s.phone_number = #{phoneNumber} limit 1
    </select>

    <select id="checkUserByEmail" resultMap="userResult" parameterType="string">
        <include refid="user"/>
        and s.email = #{email} limit 1
    </select>

    <select id="selectUserById" resultMap="userResult" parameterType="long">
        <include refid="user"/>
        and s.id = #{id}
    </select>

    <insert id="insertUser" parameterType="SystemUser" useGeneratedKeys="true" keyProperty="id" keyColumn="id">
        insert into sys_user(id, username, password, phone_number, email, nick_name, sex_id, create_by, create_time,
                             update_by, update_time, remark)
        values (null, #{username}, #{password}, #{phoneNumber}, #{email}, #{nickName}, ifnull(#{sex}, 1), #{createBy}, sysdate(),
                null, null, #{remark})
    </insert>
</mapper>